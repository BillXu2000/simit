%%% getreal
%! getreal(<1.0,2.0>) == 1.0;
%! getreal(<-3.0,4.0>) == -3.0;
func getreal(a : complex) -> (c : float)
  c = complexGetReal(a);
end

%%% getimag
%! getimag(<1.0,2.0>) == 2.0;
%! getimag(<3.0,-4.0>) == -4.0;
func getimag(a : complex) -> (c : float)
  c = complexGetImag(a);
end

%%% add
%! doadd(<1.0,2.0>,<3.0,4.0>) == <4.0,6.0>;
%! doadd(<1.0,2.0>,<-3.0,-4.0>) == <-2.0,-2.0>;
func doadd(a : complex, b : complex) -> (c : complex)
  c = a + b;
end

%%% sub
%! dosub(<3.0,4.0>,<1.0,2.0>) == <2.0,2.0>;
func dosub(a : complex, b : complex) -> (c : complex)
  c = a - b;
end

%%% domul
%! domul(<1.0,2.0>,<3.0,4.0>) == <-5.0,10.0>;
func domul(a : complex, b : complex) -> (c : complex)
  c = a * b;
end

%%% dodiv
%! dodiv(<3.0,4.0>,<1.0,2.0>) == <2.2,-0.4>;
func dodiv(a : complex, b : complex) -> (c : complex)
  c = a / b;
end

%%% complex-norm
%! cnorm(<3.0,4.0>) == 5.0;
func cnorm(a : complex) -> (c : float)
  c = complexNorm(a);
end

%%% complex-conj
%! cconj(<1.0,2.0>) == <1.0,-2.0>;
%! cconj(<3.0,-4.0>) == <3.0,4.0>;
func cconj(a : complex) -> (c : complex)
  c = complexConj(a);
end

%%% vector-add
%! vadd([<1.0,2.0>,<3.0,4.0>]', [<0.1,0.2>,<0.3,0.4>]') == [<1.1,2.2>,<3.3,4.4>]';
func vadd(a : tensor[2](complex), b : tensor[2](complex)) -> (c : tensor[2](complex))
  c = a + b;
end

%%% vector-dot
%! vdot([<1.0,2.0>,<3.0,4.0>]', [<0.1,0.2>,<0.3,0.4>]') == <-1.0,2.8>;
func vdot(a : tensor[2](complex), b : tensor[2](complex)) -> (c : complex)
  c = a' * b;
end

%%% gemv
%! gemv([<0.1,0.2>, <0.3,0.4>; <0.5,0.6>, <0.7,0.8>], [<1.0,2.0>,<3.0,4.0>]') == [<-1.0,2.8>,<-1.8,6.8>]';
func gemv(A : tensor[2,2](complex), b : tensor[2](complex)) -> (c : tensor[2](complex))
  c = A * b;
end