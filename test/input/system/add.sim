element Vertex
  a : float;
  b : float;
end

element Edge
  e : float;
end

extern V : set{Vertex};
extern E : set{Edge}(V,V);
extern F : set{Edge}(V,V);

func f(e : Edge, v : (Vertex*2)) -> (A : tensor[V,V](float))
  A(v(0),v(0)) = e.e;
  A(v(0),v(1)) = e.e;
  A(v(1),v(0)) = e.e;
  A(v(1),v(1)) = e.e;
end

proc main 
  B = map f to E reduce +;
  C = map f to F reduce +;
  A = B + C;
  V.a = A * V.b;
  %print B;
  %print C;
  %print A;
  %print V.b;
  %print V.a;
end
