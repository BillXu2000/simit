element Point
  b : float;
  c : float;
end

element Link
  a : float;
end

extern points : set{Point};
extern springs : grid{Link}[1](points);

func vonNeumann(orig : Point,
                l : grid{Link}[1](points))
    -> (vnMat : tensor[points,points](float))
    vnMat(orig,orig) = l[0;1].a + l[0;-1].a;
    vnMat(orig,points[1]) = l[0;1].a;
    vnMat(orig,points[-1]) = l[0;-1].a;
end

export func main()
  B = map vonNeumann to points through springs;
  points.c = B*points.b;
end
