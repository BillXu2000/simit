element Point
  b : float;
  c : float;
  d : float;
end

element Spring
  a : float;
end

extern points  : set{Point};
extern springs : set{Spring}(points,points);

func dist_a(s : Spring, p : (Point*2)) -> (A : tensor[points,points](float))
  A(p(0),p(0)) = s.a;
  A(p(0),p(1)) = s.a;
  A(p(1),p(0)) = s.a;
  A(p(1),p(1)) = s.a;
end

proc main 
  A = map dist_a to springs reduce +;
  var i = 0;
  for p in points
    if i == 1
      points.c = A(p,:)';
    elif i == 2
      points.d = A(:,p);
    end
    i = i + 1;
  end
end
