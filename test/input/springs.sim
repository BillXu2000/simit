%%% springs
const grav      : Tensor[3](float) = [0.0, 0.0, -9.81];
const stiffness : float = 1e3;
const h         : float = 0.01;

struct Point
  x : Tensor[3](float);
  v : Tensor[3](float);
end

struct Spring
  m  : float;
  l0 : float;
end

extern points Point{};
extern springs Spring[points,points]{};

func distribute_masses(s : Spring, p0 : Point, p1 : Point) ->
    (M : Tensor[points,points][3,3](float), f : Tensor[points][3](float))
  m = s.m;
  M(p0, p0) = 0.5*m*eye(3);
  M(p1, p1) = 0.5*m*eye(3);
  f(p0) = 0.5*m*grav;
  f(p1) = 0.5*m*grav;
end

