element Vertex
  x : float;
end

element Edge
end

element Tag
  b : float;
end

extern V : set{Vertex};
extern E : set{Edge}(V,V);
extern T : set{Tag}(V);

func asm(e : Edge, v : (Vertex*2)) -> A : matrix[V,V](float)
  A(v(0),v(0)) = 2.0;
  A(v(1),v(1)) = 2.0;
  A(v(0),v(1)) = 2.0;
  A(v(1),v(0)) = 1.0;
end

func dirichlet(t : Tag, v : (Vertex*1)) -> B : matrix[T,V](float)
  B(t,v(0)) = 1.0;
end

export func main()
  A = map asm to E reduce +;
  B = map dirichlet to T reduce +;
  solver = lu(A);
  X = lumatsolve(solver, B');
  V.x = X * T.b;
  lufree(solver);
end
