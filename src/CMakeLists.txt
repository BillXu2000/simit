if (SIMIT_SHARED_LIBRARY)
  set(SIMIT_LIBRARY_TYPE SHARED)
else()
  set(SIMIT_LIBRARY_TYPE STATIC)
endif()

# Frontend
SET(PARSER ${SIMIT_GENERATED_SOURCE_DIR}/Parser.cpp)
SET(TOKENS ${SIMIT_GENERATED_SOURCE_DIR}/Tokens.h)
SET(SCANNER_HEADER ${SIMIT_GENERATED_SOURCE_DIR}/Scanner.h)
SET(SCANNER ${SIMIT_GENERATED_SOURCE_DIR}/Scanner.cpp)

IF($ENV{SIMIT_BUILD_PARSER})
	FIND_PACKAGE(BISON REQUIRED)
	SET(PARSER_INPUT ${SIMIT_SOURCE_DIR}/Parser.ypp)
	IF(BISON_FOUND)
		ADD_CUSTOM_COMMAND(
			OUTPUT ${PARSER}
			COMMAND ${BISON_EXECUTABLE}
			        --no-lines
			        --defines=${TOKENS}
			        --output=${PARSER}
					  ${PARSER_INPUT}
			MAIN_DEPENDENCY ${PARSER_INPUT}
		COMMENT "Generating parser.cpp"
		)
	ENDIF()

	FIND_PACKAGE(FLEX REQUIRED)
	SET(SCANNER_INPUT ${SIMIT_SOURCE_DIR}/Scanner.flex)
	IF(FLEX_FOUND)
		ADD_CUSTOM_COMMAND(
			OUTPUT ${SCANNER}
			COMMAND ${FLEX_EXECUTABLE}
			        --header-file=${SCANNER_HEADER}
			        --outfile=${SCANNER}
					  ${SCANNER_INPUT}
			MAIN_DEPENDENCY ${SCANNER_INPUT}
			COMMENT "Generating scanner.cpp"
		)
	ENDIF()
ENDIF()

file(GLOB HEADERS *.h)
file(GLOB SOURCES *.cpp)

add_library(${PROJECT_NAME} ${SIMIT_LIBRARY_TYPE} ${HEADERS} ${SOURCES} ${SCANNER} ${PARSER} ${SCANNER_INPUT} ${PARSER_INPUT})

target_link_libraries(${PROJECT_NAME} ${LIBS})

