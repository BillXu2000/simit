if (CUDA_FOUND)
  add_definitions(-DGPU)
endif ()

file(GLOB UTIL_SOURCES "${SIMIT_TOOLS_DIR}/*.cpp")

foreach(UTIL_SOURCE ${UTIL_SOURCES})
	get_filename_component(UTIL ${UTIL_SOURCE} NAME_WE)
	add_executable(${UTIL} ${UTIL_SOURCE})
	target_link_libraries(${UTIL} ${PROJECT_NAME})

	# GPU Backend linking
	if (CUDA_FOUND)
	  if (LINUX)
	    find_library(libcuda NAMES cuda PATHS "${CUDA_TOOLKIT_ROOT_DIR}/lib64")
	    find_library(libnvvm NAMES nvvm PATHS "${CUDA_TOOLKIT_ROOT_DIR}/nvvm/lib64")
	    target_link_libraries(${UTIL} ${libcuda})
	    target_link_libraries(${UTIL} ${libnvvm})
	  elseif (DARWIN)
	    target_link_libraries(${UTIL} ${CUDA_LIBRARIES})
	    target_link_libraries(${UTIL} "${CUDA_TOOLKIT_ROOT_DIR}/lib/libcuda.dylib")
	    target_link_libraries(${UTIL} "${CUDA_TOOLKIT_ROOT_DIR}/nvvm/lib/libnvvm.dylib")
	  endif ()
	endif ()
endforeach()

# GPU backend (TEMP)
if (CUDA_FOUND)
  add_definitions(-DGPU)
endif ()
